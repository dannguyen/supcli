name: ripgrep
homepage: https://github.com/BurntSushi/ripgrep

docs: https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md
installation: https://github.com/BurntSushi/ripgrep#installation
repo: https://github.com/BurntSushi/ripgrep




installcommand: brew install ripgrep

like:
  - grep

tagline: |
  ripgrep is a line-oriented search tool that recursively searches your current directory for a regex pattern.

description: |
  TODO: Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nisi voluptate animi dicta labore necessitatibus, delectus blanditiis atque nostrum fugit consequatur, iusto doloribus dolores, nam nemo accusamus illo assumenda magnam corporis.

  TKTK WARNING: rg, unlike ack, does not support lookahead/lookarounds
  https://github.com/BurntSushi/ripgrep/issues/644

links:
  - title: ripgrep is faster than {grep, ag, git grep, ucg, pt, sift}
    url: https://blog.burntsushi.net/ripgrep/
  - title: Feature comparison of ack, ag, git-grep, GNU grep and ripgrep
    url: https://beyondgrep.com/feature-comparison/
  - title: Ripgrep 11 Released (2019 HN thread)
    url: https://news.ycombinator.com/item?id=12564442
  - title: Ripgrep â€“ A new command line search tool (2016 HN thread)
    url: https://news.ycombinator.com/item?id=12564442
  - title: HN thread between creators of ripgrep and ack
    url: https://news.ycombinator.com/item?id=12567328
  - title: How FZF and ripgrep improved my workflow
    url: https://medium.com/@sidneyliebrand/how-fzf-and-ripgrep-improved-my-workflow-61c7ca212861



examples:
  - title: Find by filename
    code: |

        rg -l 're\b' .

  - title: Replace matched pattern with output, including groups
    code: |
      rg 'title: (.+)' items/ripgrep.yaml -Nor 'name: $1'
    full: |
      rg 'title: (.+)' items/ripgrep.yaml --no-line-number --output --replace 'name: $1'


  - title: Include filename and line number
    code: |
      rg '\d{5}+' . -H --no-heading

  - title: Sed like substitution
    code: |
      printf '%s\n' 'date' '12/03/2014' '07/27/1990' \
        | rg '(\d{2})/(\d{2})/(\d{4})' --passthru -r '$3-$1-$2'
